;	SOURCE IS BPROM.ASM
;
;	THIS PROGRAM RESIDES ON A 512x8 PROM ON THE OMNIDISK CONTROLLER.
;	ITS PURPOSE IS TO GET A SYSTEM UP FAST.
;
;	DURING THE FIRST PART OF ITS EXECUTION THE PROGRAM APPEARS
;	ALL OVER MEMORY DURING READ CYCLES BECAUSE THE OMNIDISK
;	ONLY USES THE LOW 9 BITS OF THE 24-BIT MEMORY ADDRESS.
;	"PHANTOM" IS ASSURTED TO DISABLE OTHER MEMORY THAT MAY BE
;	PRESENT.  "PHANTOM" IS NOT ASSURTED DURING WRITE
;	CYCLES -- THIS ALLOWS THE PROGRAM TO COPY ITSELF TO REAL
;	MEMORY AND THEN TO CAUSE THE "PHANTOM OF THE BOOT" TO RESET.
;
;	UNTIL OUR "PHANTOM" IS RESET WE CAN ONLY WRITE TO REAL MEMORY.
;
START	EQU	200H
LENPROM EQU	200H		;200H IS MAX
SWAP	EQU	0FDH		;SWAP PORT FOR COMPUPRO (tm) 8085/8088

;********************************************************
;	VALID COMMAND BYTE ONE FOR OMNI CONTROLLER	*
;	   (THESE EQUATES ARE COPIED FROM BIOS)		*
;********************************************************

OC$BOOT	EQU	0		;BOOT SYSTEM
OC$RBPH	EQU	7		;RESET BOOT PHANTOM
OC$UNIT	EQU	9		;SELECT (LOGICAL) UNIT
OC$GENS EQU	22		;GET GENERAL STATUS
OC$EXTS	EQU	23		;GET EXTENDED STATUS

OMNIDATA EQU	0A0H		;<== DATA PORT FOR OMNI CONTROLLER
OMNISTAT EQU	OMNIDATA+1	;STATUS PORT FOR OMNI
INREADY  EQU	01H		;** OMNI HAS DATA TO SEND
OUTREADY EQU	80H		;** OMNI CAN NOT ACCEPT ANOTHER BYTE NOW
;
;	THE FOLLOWING CODE HAS A LITTLE TRICK IN IT:
;
;	ON RESET THE 8085 STARTS AT 0000.  THE 200H BYTE BOOT PROM
;	IS MAPPED INTO ALL ADDRESS, REPEATING AT 200H INTERVALS.
;
;	THE CODE FROM THE 16 NOP'S TO THE FIRST TIME THE "JNZ L1" IS 
; 	EXECUTED, RUNS AT 000x.  THE JMP TAKES US TO "L1" IN THE LOW 200
;	ADDRESS RANGE AND WE CONTINUE RUNNING AT 2xx UNTIL WE JMP
;	TO THE BOOT SECTOR WHICH WE LOAD AT 0000.

;	16 NOP'S - SOME CPU BOARDS NEED THIS DELAY
;	(THE LOOP AT "L2" NEEDS THE FIRST NOP)
;
	ORG	START		;FOR "L1" LOOP TO WORK,
					;"START" MUST BE ON 100H BOUNDRY

	dw	0,0,0,0,0,0,0,0

	in	SWAP		;WAKE UP 8088 IF USING COMPUPRO (tm) 8085/8088
	lxi	h,CODELBA
L1:	dcr	l
	mov	a,m			;MOVE PROG TO REAL
	mov	m,a			;MEMORY "UNDER" PROM
	jnz	L1			;IF NOT DONE MOVING TO REAL MEMORY

	sphl			;INIT STACK TO START (200H)

	in	OMNIDATA	;READ&TRASH TO RESET ANY TRASH IN REG
	mvi	a,OC$RBPH	;RESET BOOT PHANTOM...
	out	OMNIDATA	;...TO OMNI
;
;	NOW WAIT FOR OMNI TO HONOR REQUEST TO RESET THE PHANTOM OF THE BOOT
;
;	THE METHOD WE USE IS QUITE SIMPLE.  WE STORE A ZERO INTO THE
;	FIRST BYTE OF THIS CODE AND THEN COMPARE THAT FIRST BYTE AGAINST
;	THE ZERO WE JUST STORED.  THE STORE WILL ALLWAYS WORK -- BUT
;	IF THE BOOT PHANTOM IS NOT RESET THE MEMORY FETCH PART OF THE
;	COMPARE WILL FETCH THE ORIGINAL BYTE.  WE CONTINUE LOOPING
;	UNTIL WE FETCH THE ZERO.
;
; NOTE THAT <HL> = 200H
L2:	mov	m,a			;THIS STORE ALLWAYS WORKS BUT...
	cmp	m			;...IF BS PHANTOM NOT RESET, THIS FETCHES PROM
	jnz	L2
L3:	call	CMDLIST
	db	5			;(LENGTH OF LIST)
	db	OC$UNIT,0	;SELECT UNIT 0
	db	OC$BOOT,1	;READ ONLY FIRST SECTOR OF BOOT
	db	OC$GENS

	lxi	h,0000		;READ BOOT SECTOR INTO LOCATION 0000
	call	GETDAT
	ora	a			;GENERAL STATUS
	jz	0			;IF BOOT READ OK, GO FIRE UP BOOT

;
;	FAILURE READING BOOT SECTOR
;

;
;	WAIT SEVERAL SECONDS BEFORE TRYING AGAIN
;
	mvi	a,30		;FOR DELAY COUNTER (=5 SEC ON 6MHZ 8085)
L4:	dcr	l			;**
	jnz	L4			;** ON 8085 THESE LOOPS TAKE 1,118,464
	dcr	h			;** T-STATES OR ABOUT 1/CLOCK SEC
	jnz	L4			;**
	dcr	a
	jnz	L4
	jmp	L3			;TRY AGAIN AFTER DELAY

;********************************************************
;	SUBROUTINE FOR BLOCK READ							*
;														*
;	NOTE:	THIS SUBROUTINE READS DATA UNTIL			*
;		THE OMNI CONTROLLER ACCEPTS THE					*
;		GENERAL STATUS COMMAND							*
;********************************************************
GETDAT:
	in	OMNISTAT
	rrc
	jnc	GETDAT		;IF NOTHING TO GET FROM OMNI
	ani	40H			;(WHAT DO WE HAVE HERE: DATA -OR- GEN STATUS?)
	in	OMNIDATA	;TAKE IT, WHATEVER IT IS
	rz				;IF IT IS GENERAL STATUS, THEN RETURN
	mov	m,a			;ELSE...PUT INTO BUFFER
	inx	h
	jmp	GETDAT		;KEEP ON KEEPING ON

;********************************************************
;	SUBROUTINE TO ISSUE COMMAND LIST					*
;********************************************************
CMDLIST:
	xthl
	mov	c,m			;FETCH LENGTH OF LIST
	inx	h
CMDLIST1:
	in	OMNISTAT
	ani	OUTREADY
	jnz	CMDLIST1	;IF OMNI NOT READY FOR COMMAND
	mov	a,m			;NEXT BYTE TO SEND
	inx	h
	out	OMNIDATA
	dcr	c
	jnz	CMDLIST1	;IF MORE COMMANDS TO SEND
	xthl
	ret
CODELBA:			;LABEL DEFINES CODE LAST BYTE ADDRESS (LBA)

	db	'Copyright (c) 1984 W/W Componts Inc. 30 JAN 1984'

;
;	THE FOLLOWING 8088 CODE IS USED IF WE HAVE BOOTED TO
;	A COMPUPRO (tm) 8085/8088 CPU.
;
;	THE 8085 "IN SWAP" AT THE FIRST OF THIS PROM CAUSES THE 8088
;	TO BEGIN AT ITS RESET ADRESS, 0FFFF0H.  THAT TAKES US TO 1F0H
;	IN THIS PROM BECAUSE THE HIGH-ORDER BITS OF THE ADDRESS ARE
;	IGNORED.  THE "JMP FAR" INSTRUCTION FOUND THERE SETS <CS> TO
;	ZERO AND THE PROGRAM COUNTER TO 3FCH.  NOW AT 3FCH (ASSEMBLED
;	AT 1FCH FOR THIS PROM) THE 8088 EXECUTES "IN AL,SWAP",
;	CAUSING THE 8085 TO START RUNNING AGAIN.  ***BEFORE THE 8088
;	SWITCHES, IT PRE-FETCHES THE FOUR "NOP" INSTRUCTIONS.***
;	THUS WHEN THE 8088 IS STARTED AGAIN IT EXECUTES 3FEH THROUGH 202H,
;	THE PRE-FETCHED	NOP'S, AND APPEARS TO START EXECUTION AT 402H.
;

	ORG	1FCH
	db	0E4H,SWAP	;8088 IN AL,SWAP
	db	90H,90H		;8088 FOUR NOP'S FOR PREFETCH 
	db	90H,90H

	ORG	1F0H
	db	0EAH		;8088 JMP FAR ...
	dw	03FCH,0000	;8088 JMP FAR DEST & CODE SEG
	END
